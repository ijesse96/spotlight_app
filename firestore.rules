rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write to spotlight_queue collection
    match /spotlight_queue/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == document;
      allow update, delete: if request.auth != null;
    }
    
    // Allow authenticated users to read live_users collection
    match /live_users/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to read spotlight_timer collection
    match /spotlight_timer/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write spotlight_chat collection
    match /spotlight_chat/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null;
    }
    
    // Allow authenticated users to read and write spotlight_gifts collection
    match /spotlight_gifts/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to access local collections
    // These are location-based queues and related data
    match /{collection}/{document} {
      allow read: if request.auth != null && 
        (collection.matches('local_queue_.*') || 
         collection.matches('local_live_users_.*') || 
         collection.matches('local_timer_.*') ||
         collection.matches('city_queue_.*') ||
         collection.matches('city_live_users_.*') ||
         collection.matches('city_timer_.*') ||
         collection.matches('vlr_queue_.*') ||
         collection.matches('vlr_live_users_.*') ||
         collection.matches('vlr_timer_.*') ||
         collection.matches('nearby_queue_.*') ||
         collection.matches('nearby_live_users_.*') ||
         collection.matches('nearby_timer_.*'));
      allow create: if request.auth != null && 
        (collection.matches('local_queue_.*') || 
         collection.matches('city_queue_.*') ||
         collection.matches('vlr_queue_.*') ||
         collection.matches('nearby_queue_.*')) &&
        request.auth.uid == document;
      allow update, delete: if request.auth != null && 
        (collection.matches('local_queue_.*') || 
         collection.matches('city_queue_.*') ||
         collection.matches('vlr_queue_.*') ||
         collection.matches('nearby_queue_.*'));
      allow write: if request.auth != null && 
        (collection.matches('local_live_users_.*') || 
         collection.matches('local_timer_.*') ||
         collection.matches('city_live_users_.*') ||
         collection.matches('city_timer_.*') ||
         collection.matches('vlr_live_users_.*') ||
         collection.matches('vlr_timer_.*') ||
         collection.matches('nearby_live_users_.*') ||
         collection.matches('nearby_timer_.*'));
    }
    
    // Allow authenticated users to access local streams (nearby users)
    match /local_streams/{document} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
        request.auth.uid == document;
    }
    
    // Allow authenticated users to access cities and their queues
    match /cities/{cityId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can modify city data
    }
    
    match /cities/{cityId}/queue/{document} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
        request.auth.uid == document;
    }
    
    // Allow authenticated users to access verified rooms and their queues
    match /verified_rooms/{roomId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin can modify verified room data
    }
    
    match /verified_rooms/{roomId}/queue/{document} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
        request.auth.uid == document;
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 